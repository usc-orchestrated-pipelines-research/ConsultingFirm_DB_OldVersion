from .gcp_setup import client, location
from google.cloud.exceptions import NotFound
import os


def create_bucket(bucket_name, client, location):
    try:
        client.get_bucket(bucket_name)
        print(f"Bucket {bucket_name} already exists")
    except NotFound:
        client.create_bucket(bucket_name, location=location)
        print(f"Bucket {bucket_name} created in {location}")


def upload_json_to_gcs(bucket_name, client, source_file_path, destination_blob_name):
    bucket = client.bucket(bucket_name)
    blob = bucket.blob(destination_blob_name)
    blob.upload_from_filename(source_file_path)

    print(f"JSON file {source_file_path} uploaded to gs://{bucket_name}/{destination_blob_name}")


def upload_json_directory(bucket_name: str, json_dir: str):
    """
    Upload all JSON files in a local directory to the specified GCS bucket.

    Args:
        bucket_name (str): GCS bucket name.
        json_dir (str): Local directory containing JSON files.
    """
    create_bucket(bucket_name, client, location)

    for file_name in os.listdir(json_dir):
        if file_name.endswith(".json"):
            source_file_path = os.path.join(json_dir, file_name)
            destination_blob_name = file_name

            upload_json_to_gcs(bucket_name, client, source_file_path, destination_blob_name)


def upload_json_bucket(version: str):
    """
    Upload JSON files from a specific version folder to a designated GCS bucket.

    Args:
        version (str): version name (e.g., "v1", "v2", ...)
    """
    bucket_name = "consulting_firm_json"
    current_dir = os.getcwd()
    json_dir = os.path.join(current_dir, "example_output", "versions", "json", version)

    if not os.path.exists(json_dir):
        print(f"Directory {json_dir} does not exist.")
        return

    upload_json_directory(bucket_name, json_dir)
